/* Generated by AN DISI Unibo */ 
package it.unibo.thermometer

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Thermometer ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		var Temp=20 
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("thermometer | starting ")
					}
					 transition(edgeName="t045",targetState="increasing",cond=whenDispatch("startthermometer"))
				}	 
				state("increasing") { //this:State
					action { //it:State
						println("temperature increasing, actual temperature: $Temp| THERMOMETER")
						delay(6000) 
						Temp=Temp+5 
						forward("updateGui", "temp($Temp)" ,"guiupdater" ) 
						delay(3000) 
						emit("temperature", "temperature($Temp)" ) 
						stateTimer = TimerActor("timer_increasing", 
							scope, context!!, "local_tout_thermometer_increasing", 100.toLong() )
					}
					 transition(edgeName="t046",targetState="increasing",cond=whenTimeout("local_tout_thermometer_increasing"))   
					transition(edgeName="t047",targetState="decreasing",cond=whenEvent("decrease"))
				}	 
				state("decreasing") { //this:State
					action { //it:State
						println("temperature decreasing, actual temperature: $Temp| THERMOMETER")
						delay(3000) 
						Temp=Temp-5 
						delay(3000) 
						forward("updateGui", "temp($Temp)" ,"guiupdater" ) 
						emit("temperature", "temperature($Temp)" ) 
						stateTimer = TimerActor("timer_decreasing", 
							scope, context!!, "local_tout_thermometer_decreasing", 100.toLong() )
					}
					 transition(edgeName="t048",targetState="decreasing",cond=whenTimeout("local_tout_thermometer_decreasing"))   
					transition(edgeName="t049",targetState="increasing",cond=whenEvent("increase"))
				}	 
			}
		}
}
